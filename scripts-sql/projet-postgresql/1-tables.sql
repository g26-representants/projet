SET search_path TO projet;


-- Sch√©ma

DROP SCHEMA IF EXISTS projet CASCADE;
CREATE SCHEMA projet AUTHORIZATION projet;
GRANT ALL PRIVILEGES ON SCHEMA projet TO projet;


-- Tables

CREATE TABLE compte (
	idcompte		INT				GENERATED BY DEFAULT AS IDENTITY,
	pseudo			VARCHAR(25)		NOT NULL,
	motdepasse		VARCHAR(25) 	NOT NULL,
	email			VARCHAR(100)	NOT NULL,
	PRIMARY KEY (idcompte),
	UNIQUE (pseudo)
);

CREATE TABLE role (
	idcompte		INT				NOT NULL,
	role			VARCHAR(20)		NOT NULL,
	CHECK( Role IN ('ADMINISTRATEUR','UTILISATEUR') ),	
	PRIMARY KEY (idcompte, role),
	FOREIGN KEY (idcompte) REFERENCES compte (idcompte)
);

CREATE TABLE categorie (
	idcategorie		INT				GENERATED BY DEFAULT AS IDENTITY,
	libelle			VARCHAR(25)		NOT NULL,
	PRIMARY KEY (idcategorie)
);

CREATE TABLE personne (
	idpersonne		INT				GENERATED BY DEFAULT AS IDENTITY,
	idcategorie		INT				NOT NULL,
	nom				VARCHAR(25)  	NOT NULL,
	prenom			VARCHAR(25) 	NOT NULL,
	PRIMARY KEY (idpersonne),
 	FOREIGN KEY (idcategorie) REFERENCES categorie (idcategorie)
);

CREATE TABLE telephone (
	idtelephone		INT				GENERATED BY DEFAULT AS IDENTITY,
	idpersonne		INT			 	NOT NULL,
	Libelle			VARCHAR(25)		NOT NULL,
	Numero			VARCHAR(25)		NOT NULL,
	PRIMARY KEY (idtelephone),
	FOREIGN KEY (idpersonne) REFERENCES personne (idpersonne)
);

CREATE TABLE memo (	
	idmemo 			INT				GENERATED BY DEFAULT AS IDENTITY, 
	titre 			VARCHAR(50)		NOT NULL, 
	description		VARCHAR(1000), 
	flagurgent		BOOLEAN			NOT NULL, 
	statut			SMALLINT		NOT NULL	DEFAULT 0,
	effectif		INT,
	budget			DOUBLE PRECISION,
	echeance		Date,
	idcategorie		INT,
	CHECK( statut BETWEEN 0 AND 2 ),	
	PRIMARY KEY (idmemo),
 	FOREIGN KEY (idcategorie) REFERENCES categorie (idcategorie)
);

CREATE TABLE concerner (
	idmemo		INT				NOT NULL,
	idpersonne	INT				NOT NULL,
	PRIMARY KEY (idmemo, idpersonne),
	FOREIGN KEY (idmemo) REFERENCES memo (idmemo),
	FOREIGN KEY (idpersonne) REFERENCES personne (idpersonne)
);

CREATE TABLE service (	
	idservice 		INT				GENERATED BY DEFAULT AS IDENTITY, 
	nom 			VARCHAR(50)		NOT NULL, 
	description		VARCHAR(1000), 
	anneecreation	SMALLINT,
	flagsiege		BOOLEAN			NOT NULL, 
	PRIMARY KEY (idservice)
);

CREATE TABLE boldair (
	idboldair		INT				GENERATED BY DEFAULT AS IDENTITY,
	dateboldair		DATE			NOT NULL,
	ravitaillement	INT,
	parking			INT,
	dossards		INT,
	buvette			INT,
	repas			INT,
	signaleur		INT,
	PRIMARY KEY (idboldair)
);


-- Vues

CREATE VIEW v_compte_avec_roles AS
	SELECT c.*, ARRAY_AGG( r.role ) AS roles
	FROM compte c 
	LEFT JOIN ROLE r ON c.idcompte = r.idcompte
	GROUP BY c.idcompte;

------------------------------------------------------------
-- Table: Equipe
------------------------------------------------------------
CREATE TABLE equipe(
idequipe     INT  GENERATED BY DEFAULT AS IDENTITY ,
nom_equipe   VARCHAR (25) NOT NULL ,
nb_repas     INT  NOT NULL ,
valide       BOOL  NOT NULL,
paye         BOOL  NOT NULL  ,
PRIMARY KEY (idequipe)
);


------------------------------------------------------------
-- Table: Participant
------------------------------------------------------------
CREATE TABLE participant(
idparticipant                     INT  GENERATED BY DEFAULT AS IDENTITY,
idequipe						  INT				NOT NULL,
nom_participant                   VARCHAR (25) NOT NULL ,
prenom_participant                VARCHAR (25) NOT NULL ,
date_naissance_participant        DATE  NOT NULL,
tel_participant    				  VARCHAR(25) NOT NULL,
email_participant                 VARCHAR (30) NOT NULL ,
addresse_participant              VARCHAR (30) NOT NULL ,
code_postal_participants  INT NOT NULL,
certificat_medicale_participant   VARCHAR (200)  NOT NULL ,
carte_id_participant              VARCHAR (200)  NOT NULL ,
sexe_participant                  BOOLEAN  NOT NULL  ,
PRIMARY KEY (idparticipant),
FOREIGN KEY (idequipe) REFERENCES equipe (idequipe)
);


------------------------------------------------------------
-- Table: Benevole_Participant
------------------------------------------------------------
CREATE TABLE benevole_participant(
idbenevole_participant                INT   GENERATED BY DEFAULT AS IDENTITY ,
nom_benevole_participant              VARCHAR (25) NOT NULL,
prenom_benevole_participant           VARCHAR (25) NOT NULL,
email_benevole_participant            VARCHAR (25) NOT NULL,
addresse_benevole_participant         VARCHAR (30) NOT NULL,
tel_benevole_participant              VARCHAR(25)  NOT NULL,
code_postal_benevole_participants  INT NOT NULL,
date_naissance_benevole_participant   DATE  NOT NULL ,
PRIMARY KEY (idbenevole_participant),
UNIQUE (email_benevole_participant)
);


------------------------------------------------------------
-- Table: Poste_Benevole
------------------------------------------------------------
CREATE TABLE poste_benevole(
idposte       INT  GENERATED BY DEFAULT AS IDENTITY ,
nom_poste     VARCHAR (50) NOT NULL ,
heure_debut   TIME  NOT NULL ,
heure_fin     TIME  NOT NULL  ,
PRIMARY KEY (idposte),
UNIQUE (nom_poste)
);


------------------------------------------------------------
-- Table: Resonsable_Benevole
------------------------------------------------------------
CREATE TABLE responsable_benevole(
idresponsable                   INT   GENERATED BY DEFAULT AS IDENTITY ,
nom_responsable                  VARCHAR (50) NOT NULL ,
prenom_responsable               VARCHAR (50) NOT NULL ,
date_de_naissance_res_benevole   DATE  NOT NULL ,
tel_responsable_benevole VARCHAR(25) NOT NULL,
adresse_email_res_benevole       VARCHAR (50) NOT NULL ,
adresse_res_benevole             VARCHAR (50) NOT NULL  ,
code_postal_responsable_benevole INT NOT NULL,
PRIMARY KEY (idresponsable),
UNIQUE (adresse_email_res_benevole)
);


------------------------------------------------------------
-- Table: Epreuve
------------------------------------------------------------
CREATE TABLE epreuve(
idepreuve      INT   GENERATED BY DEFAULT AS IDENTITY ,
tarif_epreuve   INT  NOT NULL ,
type_epreuve    VARCHAR (10) NOT NULL,
date_epreuve    DATE  NOT NULL ,
nom_epreuve     VARCHAR (10) NOT NULL ,
PRIMARY KEY (idepreuve)
--UNIQUE (date_epreuve)
);


------------------------------------------------------------
-- Table: Responsable_Administratif
------------------------------------------------------------
CREATE TABLE responsable_administratif(
idresadmin               INT   GENERATED BY DEFAULT AS IDENTITY,
nom_responsable_admin      VARCHAR (20) NOT NULL,
prenom_responsable_admin   VARCHAR (20) NOT NULL,
date_naissance_res_admin   DATE  NOT NULL,
tel_responsable_admin 	   VARCHAR (20) NOT NULL,
adresse_email_res_admin    VARCHAR (20) NOT NULL,
adresse_respnsable_admin   VARCHAR (20) NOT NULL,
code_postal_responsable_admin INT NOT NULL,
PRIMARY KEY (idresadmin),
UNIQUE(adresse_email_res_admin)

);


------------------------------------------------------------
-- Table: Avoir
------------------------------------------------------------
CREATE TABLE avoir(
idposte                  INT  NOT NULL,
idbenevole_participant   INT  NOT NULL,
PRIMARY KEY (idposte,idbenevole_participant),
FOREIGN KEY (idposte) REFERENCES poste_benevole(idposte),
    FOREIGN KEY (idbenevole_participant) REFERENCES benevole_participant(idbenevole_participant)
);


------------------------------------------------------------
-- Table: Appartenir
------------------------------------------------------------
CREATE TABLE appartenir(
idequipe        INT  NOT NULL ,
idparticipant   INT  NOT NULL  ,
PRIMARY KEY (idequipe,idparticipant),
FOREIGN KEY (idequipe) REFERENCES equipe(idequipe),
FOREIGN KEY (idparticipant) REFERENCES participant(idparticipant)
);


------------------------------------------------------------
-- Table: Participer
------------------------------------------------------------
CREATE TABLE participer(
idepreuve   INT  NOT NULL ,
idequipe     INT  NOT NULL ,
PRIMARY KEY (idepreuve,idequipe),
FOREIGN KEY (idepreuve) REFERENCES epreuve(idepreuve),
FOREIGN KEY (idequipe) REFERENCES equipe(idequipe)
);

------------------------------------------------------------
-- Table: numero_telephone
------------------------------------------------------------
--CREATE TABLE numero_telephone (
--	idtelephone		INT				GENERATED BY DEFAULT AS IDENTITY,
--	idparticipant		INT			 	NOT NULL,
--	libelle			VARCHAR(25)		NOT NULL,
--	numero			VARCHAR(25)		NOT NULL,
--	PRIMARY KEY (idtelephone),
--	FOREIGN KEY (idparticipant) REFERENCES participant (idparticipant)
--);